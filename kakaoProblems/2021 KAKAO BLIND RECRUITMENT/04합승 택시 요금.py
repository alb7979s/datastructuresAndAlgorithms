# https://programmers.co.kr/learn/courses/30/lessons/72413?language=python3
# 이거 실제 시험 땐 플로이드 효율성 하나 걸려서 c++로 제출했던거 같은데 지금은 통과됨
# min() 함수 쓰는 거보다 직접 if문으로 쓰는게 두배 가까이 빠르게 나옴, 테스트 해본 시간은 아래

from sys import*
input = lambda: stdin.readline
def solution(n, s, a, b, fares):
    INF = int(1e9)
    dist = [[INF] * n for _ in range(n)]
    s -= 1; a -= 1; b -= 1
    for u, v, w in fares:
        u -= 1; v -= 1
        dist[u][v] = min(dist[u][v], w)
        dist[v][u] = min(dist[v][u], w)
    for i in range(n): dist[i][i] = 0
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][k] + dist[k][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]
    answer = INF
    for i in range(n):
        if answer > dist[s][i] + dist[i][a] + dist[i][b]:
            answer = dist[s][i] + dist[i][a] + dist[i][b]
    return answer

print(solution(	6, 4, 6, 2, [[4, 1, 10], [3, 5, 24], [5, 6, 2], [3, 1, 41], [5, 1, 24], [4, 6, 50], [2, 4, 66], [2, 3, 22], [1, 6, 25]]))

'''
1. min() 함수 사용
테스트 1 〉	통과 (306.89ms, 10.6MB)
테스트 2 〉	통과 (1022.54ms, 11.1MB)
테스트 3 〉	통과 (2264.68ms, 11.5MB)
테스트 4 〉	통과 (2064.45ms, 11.5MB)
테스트 5 〉	통과 (2287.69ms, 11.5MB)
테스트 6 〉	통과 (2282.67ms, 11.5MB)
테스트 7 〉	통과 (2357.59ms, 13.9MB)
테스트 8 〉	통과 (2105.90ms, 14.1MB)
테스트 9 〉	통과 (2457.57ms, 13MB)
테스트 10 〉	통과 (2344.38ms, 12.9MB)
테스트 11 〉	통과 (2149.56ms, 12.9MB)
테스트 12 〉	통과 (2384.71ms, 12.8MB)
테스트 13 〉	통과 (2345.96ms, 12.8MB)
테스트 14 〉	통과 (2284.74ms, 12.9MB)
테스트 15 〉	통과 (2080.10ms, 12.9MB)
테스트 16 〉	통과 (2337.96ms, 11.5MB)
테스트 17 〉	통과 (2321.28ms, 11.6MB)
테스트 18 〉	통과 (2269.06ms, 11.3MB)
테스트 19 〉	통과 (2158.30ms, 11.5MB)
테스트 20 〉	통과 (2350.86ms, 11.7MB)
테스트 21 〉	통과 (2400.05ms, 11.8MB)
테스트 22 〉	통과 (2297.77ms, 12.9MB)
테스트 23 〉	통과 (2107.41ms, 12.9MB)
테스트 24 〉	통과 (2437.28ms, 12.8MB)
테스트 25 〉	통과 (2344.74ms, 11.2MB)
테스트 26 〉	통과 (2267.77ms, 11MB)
테스트 27 〉	통과 (2084.12ms, 10.5MB)
테스트 28 〉	통과 (2203.37ms, 10.5MB)
테스트 29 〉	통과 (289.92ms, 10.4MB)
테스트 30 〉	통과 (257.98ms, 10.5MB)

2. 직접 if 문으로 작성
테스트 1 〉	통과 (148.86ms, 10.6MB)
테스트 2 〉	통과 (453.64ms, 11.2MB)
테스트 3 〉	통과 (1196.35ms, 11.4MB)
테스트 4 〉	통과 (1185.70ms, 11.4MB)
테스트 5 〉	통과 (1172.53ms, 11.5MB)
테스트 6 〉	통과 (1161.86ms, 11.4MB)
테스트 7 〉	통과 (1076.33ms, 13.9MB)
테스트 8 〉	통과 (1199.80ms, 14.1MB)
테스트 9 〉	통과 (1254.27ms, 12.9MB)
테스트 10 〉	통과 (1141.30ms, 12.9MB)
테스트 11 〉	통과 (1302.30ms, 13MB)
테스트 12 〉	통과 (1221.19ms, 12.8MB)
테스트 13 〉	통과 (1190.21ms, 12.8MB)
테스트 14 〉	통과 (1194.91ms, 12.8MB)
테스트 15 〉	통과 (1089.51ms, 12.8MB)
테스트 16 〉	통과 (1161.59ms, 11.5MB)
테스트 17 〉	통과 (1175.94ms, 11.5MB)
테스트 18 〉	통과 (1047.45ms, 11.3MB)
테스트 19 〉	통과 (1215.51ms, 11.5MB)
테스트 20 〉	통과 (1198.68ms, 11.7MB)
테스트 21 〉	통과 (1173.49ms, 11.8MB)
테스트 22 〉	통과 (1195.72ms, 12.8MB)
테스트 23 〉	통과 (1080.27ms, 12.8MB)
테스트 24 〉	통과 (1194.60ms, 12.9MB)
테스트 25 〉	통과 (1052.85ms, 11.3MB)
테스트 26 〉	통과 (1159.08ms, 11MB)
테스트 27 〉	통과 (1103.93ms, 10.5MB)
테스트 28 〉	통과 (1113.94ms, 10.5MB)
테스트 29 〉	통과 (146.59ms, 10.4MB)
테스트 30 〉	통과 (147.01ms, 10.4MB)
'''